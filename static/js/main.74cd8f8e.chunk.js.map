{"version":3,"sources":["component/Checkbox.module.scss","component/Header.module.scss","component/Fieldset.module.scss","component/Footer.module.scss","locales/i18n.ts","component/Header.tsx","component/Footer.tsx","component/Time.tsx","component/Fieldset.tsx","component/Label.tsx","component/Checkbox.tsx","component/Controller.tsx","reportWebVitals.ts","index.tsx","component/Controller.module.scss","component/Label.module.scss","component/Time.module.scss"],"names":["module","exports","i18n","use","initReactI18next","init","resources","en","translation","ja","fallbackLng","lng","window","navigator","languages","interpolation","escapeValue","langName","Header","useState","language","lang","setLang","t","useTranslation","className","styles","header","h1","href","map","_lang","undefined","type","onClick","a","changeLanguage","Footer","footer","Time","text","setText","useEffect","setInterval","date","Date","toLocaleTimeString","hour12","hour","minute","second","wrap","id","inner","aria-live","time","Fieldset","props","fieldset","legend","children","Label","data-disabled","disabled","label","name","input","Checkbox","attr","onChange","checked","state","setState","_onChange","e","checkbox","target","data-checked","styleElement","document","createElement","saveData","JSON","parse","localStorage","getItem","saveDataSave","setItem","stringify","Controller","bgColor","setBgColor","color","setColor","weight","setWeight","fontFamily","setfontFamily","isTransparent","setIsTransparent","Css","aria-label","onFocus","select","result","value","readOnly","textContent","head","append","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Main","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.74cd8f8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Checkbox_input__3kiei\",\"state\":\"Checkbox_state__9PcP6\",\"wrap\":\"Checkbox_wrap__3OaSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1jo7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fieldset\":\"Fieldset_fieldset__1SUzt\",\"legend\":\"Fieldset_legend__dG0xX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1pN3o\"};","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst resources = {\n  en: {\n    translation: {\n      '現在時刻': 'The current time for OBS',\n      'OBS用カスタムCSSジェネレータ': 'Custom CSS Generator for OBS',\n      '次の手順でご利用ください。': 'Please follow the steps below to use it:',\n      'OBSでブラウザソースを追加（新規作成）': 'Add a browser source in OBS (create a new one)',\n      'URL：このページのURLを設定': 'URL: Set the URL of this page',\n      '幅：500程度': 'Width: About 500',\n      '高さ：150程度': 'Height: About 150',\n      'カスタムCSS：ページ下部のものを設定': 'Custom CSS: Set the one at the bottom of the page',\n      '前景色': 'Text',\n      '文字色': 'Font color',\n      '文字の太さ': 'Font weight',\n      'フォント': 'Font family',\n      '透過': 'Transparent',\n      '背景色': 'Background color',\n      'カスタムCSS': 'Custom CSS',\n      'ここに時間の見た目のCSSを追記可能': 'CSS for time appearance can be added here',\n    },\n  },\n  ja: {\n    translation: {\n      '現在時刻': 'OBSに現在時刻を表示するやつ',\n      'OBS用カスタムCSSジェネレータ': 'OBS用カスタムCSSジェネレータ',\n      '次の手順でご利用ください。': '次の手順でご利用ください。',\n      'OBSでブラウザソースを追加（新規作成）': 'OBSでブラウザソースを追加（新規作成）',\n      'URL：このページのURLを設定': 'URL：このページのURLを設定',\n      '幅：500程度': '幅：500程度',\n      '高さ：150程度': '高さ：150程度',\n      'カスタムCSS：ページ下部のものを設定': 'カスタムCSS：ページ下部のものを設定',\n      '前景色': '前景色',\n      '文字色': '文字色',\n      '文字の太さ': '文字の太さ',\n      'フォント': 'フォント',\n      '透過': '透過',\n      '背景色': '背景色',\n      'カスタムCSS': 'カスタムCSS',\n      'ここに時間の見た目のCSSを追記可能': 'ここに時間の見た目のCSSを追記可能',\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: ['en', 'ja'],\n    lng: window.navigator.languages[0] === 'ja' ? 'ja' : 'en', // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\n  export default i18n;\n","import React, {useState} from 'react';\nimport i18n from 'i18next';\nimport '../locales/i18n';\nimport {useTranslation} from 'react-i18next';\nimport {Helmet, HelmetProvider} from 'react-helmet-async';\nimport styles from './Header.module.scss';\n\nconst langName = {\n  en: 'English here',\n  ja: '日本語はこちら',\n} as {\n  [x: string]: string,\n};\n\nexport function Header() {\n  const [lang, setLang] = useState(i18n.language);\n  const {t} = useTranslation();\n\n  return (\n    <header className={styles.header}>\n      <HelmetProvider>\n        <Helmet>\n          <html lang={lang} />\n        </Helmet>\n      </HelmetProvider>\n\n      <h1 className={styles.h1}>{t('現在時刻')}</h1>\n      <p>\n        <a href=\"/\">@heppokofrontend</a>\n        {\n          i18n.languages.map(_lang => _lang === lang ? undefined : (\n            <button type=\"button\" key={lang} onClick={async () => {\n              await i18n.changeLanguage(_lang);\n              setLang(i18n.language);\n            }}>{langName[_lang]}</button>\n          ))\n        }\n      </p>\n    </header>\n  );\n}\n","import React from 'react';\nimport styles from './Footer.module.scss';\n\nexport function Footer() {\n  return (\n    <footer className={styles.footer}>\n      <p>\n        <a href=\"https://github.com/heppokofrontend/obs-what-time-is-it-now\">Source on GitHub</a>\n      </p>\n    </footer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styles from './Time.module.scss';\n\nexport function Time() {\n  const [text, setText] = useState('00:00:00');\n\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n\n      setText(date.toLocaleTimeString('JP-ja', {\n        hour12: false,\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit',\n      }))\n    }, 1000);\n  });\n  return (\n    <div className={styles.wrap} id=\"target\">\n      <div className={styles.inner} id=\"target__inner\">\n        <p id=\"time\" aria-live=\"polite\" className={styles.time}>{text}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport styles from './Fieldset.module.scss';\n\ntype Props = {\n  legend: string,\n  children: React.ReactNode,\n};\n\nexport function Fieldset(props: Props) {\n  return (\n    <fieldset className={styles.fieldset}>\n      <legend className={styles.legend}>{props.legend}</legend>\n\n      {props.children}\n    </fieldset>\n  );\n}\n","import React from 'react';\nimport styles from './Label.module.scss';\n\ntype Props = {\n  name: string,\n  disabled?: boolean,\n  children: React.ReactNode,\n};\n\nexport function Label(props: Props) {\n  return (\n    <p className={styles.wrap} data-disabled={props.disabled}>\n      <label className={styles.label}>\n        <span className={styles.name}>{props.name}</span>\n        <span className={styles.input}>\n          {props.children}\n        </span>\n      </label>\n    </p>\n  );\n}\n","import React, {DetailedHTMLProps, InputHTMLAttributes, useState} from 'react';\nimport styles from './Checkbox.module.scss';\n\ntype Props = Partial<DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>>;\n\nexport function Checkbox(attr: Props = {}) {\n  const {onChange, ...props} = attr;\n  const [state, setState] = useState(props.checked ?? true);\n  const _onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const checkbox = e.target as HTMLInputElement;\n\n    setState(checkbox.checked);\n    onChange && onChange(e);\n  };\n\n  return (\n    <span className={styles.wrap} data-checked={state}>\n      <input\n        type=\"checkbox\"\n        onChange={_onChange}\n        className={styles.input}\n        {...props}\n      />\n      <span className={styles.state}></span>\n    </span>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport styles from './Controller.module.scss';\nimport {useTranslation} from 'react-i18next';\nimport {Fieldset} from './Fieldset';\nimport {Label} from './Label';\nimport {Checkbox} from './Checkbox';\n\ntype Props = {\n  children?: React.ReactNode,\n};\n\nconst styleElement = document.createElement('style');\nconst saveData: any = (() => {\n  try {\n    return JSON.parse(localStorage.getItem('obs-time-css') || '{}');\n  } catch {\n    return {};\n  }\n})();\nconst saveDataSave = () => {\n  localStorage.setItem('obs-time-css', JSON.stringify(saveData));\n};\n\nexport function Controller(props: Props) {\n  const [bgColor, setBgColor] = useState(saveData.bgColor || '#ffffff');\n  const [color, setColor] = useState(saveData.color || '#000000');\n  const [weight, setWeight] = useState(saveData.weight || 'normal');\n  const [fontFamily, setfontFamily] = useState(saveData.fontFamily || 'sans-serif');\n  const [isTransparent, setIsTransparent] = useState(saveData.isTransparent ?? true);\n  const { t } = useTranslation();\n  // console.log(isTransparent, 0);\n\n  const colorChange = (e: React.SyntheticEvent) => {\n    const input = e.target as HTMLInputElement;\n\n    saveData.color = input.value;\n    saveDataSave();\n\n    return setColor(input.value);\n  };\n  const weightChange = (e: React.SyntheticEvent) => {\n    const input = e.target as HTMLSelectElement;\n\n    saveData.weight = input.value;\n    saveDataSave();\n\n    return setWeight(input.value);\n  };\n  const fontFamilyChange = (e: React.SyntheticEvent) => {\n    const input = e.target as HTMLInputElement;\n\n    saveData.fontFamily = input.value;\n    saveDataSave();\n\n    return setfontFamily(input.value);\n  };\n  const transparentChange = (e: React.SyntheticEvent) => {\n    const input = e.target as HTMLInputElement;\n\n    saveData.isTransparent = input.checked;\n    saveDataSave();\n\n    return setIsTransparent(input.checked);\n  };\n  const bgColorChange = (e: React.SyntheticEvent) => {\n    const input = e.target as HTMLInputElement;\n\n    saveData.bgColor = input.value;\n    saveDataSave();\n\n    return setBgColor(input.value);\n  };\n  const Css = function () {\n    const onFocus = function (e: React.SyntheticEvent) {\n      const textarea = e.target as HTMLTextAreaElement;\n\n      textarea.select();\n    };\n\n    return (\n      <p>\n        <textarea aria-label={t('カスタムCSS')} onFocus={onFocus} className={styles.result} value={\n        `#time {\n  /* ${t('ここに時間の見た目のCSSを追記可能')} */\n  color: ${color};\n  font-weight: ${weight};\n  font-family: ${fontFamily};\n}\n\nbody {\n  overflow: hidden;\n  background: ${isTransparent ? 'transparent' : bgColor};\n}\nheader, #controller, footer {\n  display: none !important;\n}\nmain {\n  align-self: auto;\n  width: auto;\n}\n#target {\n  margin: 0;\n  border: 0;\n  background: transparent;\n}\n#target__inner {\n  padding: 0;\n}\n        `} readOnly/>\n      </p>\n    );\n  };\n\n  styleElement.textContent = `#time {\n    color: ${color};\n    font-weight: ${weight};\n    font-family: ${fontFamily};\n  }\n\n  #target__inner {\n    background: ${isTransparent ? 'transparent' : bgColor};\n  }`;\n\n  useEffect(() => {\n    document.head.append(styleElement)\n  });\n\n  return (\n    <div id=\"controller\" className={styles.wrap}>\n      {props.children}\n\n      <Fieldset legend={t('前景色')}>\n        <Label name={t('文字色')}>\n          <input\n            type=\"color\"\n            value={color}\n            onChange={colorChange}\n            className={styles.input}\n          />\n        </Label>\n\n        <Label name={t('文字の太さ')}>\n          <select\n            onChange={weightChange}\n            value={weight}\n            className={styles.input}\n          >\n            <option>normal</option>\n            <option>bold</option>\n          </select>\n        </Label>\n\n        <Label name={t('フォント')}>\n          <input\n            onChange={fontFamilyChange}\n            value={fontFamily}\n            className={styles.input}\n          />\n        </Label>\n      </Fieldset>\n\n      <Fieldset legend={t('背景色')}>\n        <Label name={t('透過')}>\n          <Checkbox\n            checked={isTransparent}\n            onChange={transparentChange}\n          />\n        </Label>\n\n        <Label name={t('背景色')} disabled={isTransparent}>\n          <input\n            type=\"color\"\n            value={bgColor}\n            onChange={bgColorChange}\n            className={styles.input} disabled={isTransparent}\n          />\n        </Label>\n      </Fieldset>\n\n      <Css />\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './locales/i18n';\nimport {useTranslation} from 'react-i18next';\nimport {Header} from './component/Header';\nimport {Footer} from './component/Footer';\nimport {Time} from './component/Time';\nimport {Controller} from './component/Controller';\nimport reportWebVitals from './reportWebVitals';\nimport './styles/common.scss';\n\nconst Main = () => {\n  const { t } = useTranslation();\n\n  return (\n    <main>\n      <Time />\n      <Controller>\n        <h2>{t('OBS用カスタムCSSジェネレータ')}</h2>\n        <p>{t('次の手順でご利用ください。')}</p>\n        <ol>\n          <li>{t('OBSでブラウザソースを追加（新規作成）')}</li>\n          <li>{t('URL：このページのURLを設定')}</li>\n          <li>{t('幅：500程度')}</li>\n          <li>{t('高さ：150程度')}</li>\n          <li>{t('カスタムCSS：ページ下部のものを設定')}</li>\n        </ol>\n      </Controller>\n    </main>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n\n    <Main />\n\n    <Footer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Controller_wrap__2bpvr\",\"input\":\"Controller_input__bjotq\",\"result\":\"Controller_result__wGIIo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Label_wrap__CoAvx\",\"label\":\"Label_label__2camQ\",\"input\":\"Label_input__29TFS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Time_wrap__MhlK7\",\"inner\":\"Time_inner__6iZak\",\"time\":\"Time_time__2N9Zo\"};"],"sourceRoot":""}